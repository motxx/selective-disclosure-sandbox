/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Keeper, KeeperInterface } from "../Keeper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registeredSigner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string[]",
            name: "ipfsIds",
            type: "string[]",
          },
        ],
        internalType: "struct LibKeeper.Conditions",
        name: "conditions",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161082d38038061082d83398181016040528101906100329190610491565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001600082015181600001908051906020019061009192919061009c565b5090505050506107e0565b8280548282559060005260206000209081019282156100e4579160200282015b828111156100e35782518290816100d3919061070e565b50916020019190600101906100bc565b5b5090506100f191906100f5565b5090565b5b80821115610115576000818161010c9190610119565b506001016100f6565b5090565b50805461012590610527565b6000825580601f106101375750610156565b601f0160209004906000526020600020908101906101559190610159565b5b50565b5b8082111561017257600081600090555060010161015a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101b58261018a565b9050919050565b6101c5816101aa565b81146101d057600080fd5b50565b6000815190506101e2816101bc565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610236826101ed565b810181811067ffffffffffffffff82111715610255576102546101fe565b5b80604052505050565b6000610268610176565b9050610274828261022d565b919050565b600080fd5b600080fd5b600067ffffffffffffffff82111561029e5761029d6101fe565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156102d4576102d36101fe565b5b6102dd826101ed565b9050602081019050919050565b60005b838110156103085780820151818401526020810190506102ed565b60008484015250505050565b6000610327610322846102b9565b61025e565b905082815260208101848484011115610343576103426102b4565b5b61034e8482856102ea565b509392505050565b600082601f83011261036b5761036a61027e565b5b815161037b848260208601610314565b91505092915050565b600061039761039284610283565b61025e565b905080838252602082019050602084028301858111156103ba576103b96102af565b5b835b8181101561040157805167ffffffffffffffff8111156103df576103de61027e565b5b8086016103ec8982610356565b855260208501945050506020810190506103bc565b5050509392505050565b600082601f8301126104205761041f61027e565b5b8151610430848260208601610384565b91505092915050565b60006020828403121561044f5761044e6101e8565b5b610459602061025e565b9050600082015167ffffffffffffffff81111561047957610478610279565b5b6104858482850161040b565b60008301525092915050565b600080604083850312156104a8576104a7610180565b5b60006104b6858286016101d3565b925050602083015167ffffffffffffffff8111156104d7576104d6610185565b5b6104e385828601610439565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061053f57607f821691505b602082108103610552576105516104f8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105ba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261057d565b6105c4868361057d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061060b610606610601846105dc565b6105e6565b6105dc565b9050919050565b6000819050919050565b610625836105f0565b61063961063182610612565b84845461058a565b825550505050565b600090565b61064e610641565b61065981848461061c565b505050565b5b8181101561067d57610672600082610646565b60018101905061065f565b5050565b601f8211156106c25761069381610558565b61069c8461056d565b810160208510156106ab578190505b6106bf6106b78561056d565b83018261065e565b50505b505050565b600082821c905092915050565b60006106e5600019846008026106c7565b1980831691505092915050565b60006106fe83836106d4565b9150826002028217905092915050565b610717826104ed565b67ffffffffffffffff8111156107305761072f6101fe565b5b61073a8254610527565b610745828285610681565b600060209050601f8311600181146107785760008415610766578287015190505b61077085826106f2565b8655506107d8565b601f19841661078686610558565b60005b828110156107ae57848901518255600182019150602085019450602081019050610789565b868310156107cb57848901516107c7601f8916826106d4565b8355505b6001600288020188555050505b505050505050565b603f806107ee6000396000f3fe6080604052600080fdfea264697066735822122078bf7b4783e9ed376f6442b3a7e602a46b0dcc7a4dbbff55a445b789f59b67d664736f6c63430008130033";

export class Keeper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    registeredSigner: string,
    conditions: { ipfsIds: string[] },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Keeper> {
    return super.deploy(
      registeredSigner,
      conditions,
      overrides || {}
    ) as Promise<Keeper>;
  }
  getDeployTransaction(
    registeredSigner: string,
    conditions: { ipfsIds: string[] },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      registeredSigner,
      conditions,
      overrides || {}
    );
  }
  attach(address: string): Keeper {
    return super.attach(address) as Keeper;
  }
  connect(signer: Signer): Keeper__factory {
    return super.connect(signer) as Keeper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperInterface {
    return new utils.Interface(_abi) as KeeperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Keeper {
    return new Contract(address, _abi, signerOrProvider) as Keeper;
  }
}
